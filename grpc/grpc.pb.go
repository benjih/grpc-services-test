// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc.proto

package grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CustomerContactRequest struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	EmailAddress         string   `protobuf:"bytes,4,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	TelephoneNumber      string   `protobuf:"bytes,5,opt,name=telephone_number,json=telephoneNumber,proto3" json:"telephone_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CustomerContactRequest) Reset()         { *m = CustomerContactRequest{} }
func (m *CustomerContactRequest) String() string { return proto.CompactTextString(m) }
func (*CustomerContactRequest) ProtoMessage()    {}
func (*CustomerContactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{0}
}

func (m *CustomerContactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerContactRequest.Unmarshal(m, b)
}
func (m *CustomerContactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerContactRequest.Marshal(b, m, deterministic)
}
func (m *CustomerContactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerContactRequest.Merge(m, src)
}
func (m *CustomerContactRequest) XXX_Size() int {
	return xxx_messageInfo_CustomerContactRequest.Size(m)
}
func (m *CustomerContactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerContactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerContactRequest proto.InternalMessageInfo

func (m *CustomerContactRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *CustomerContactRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CustomerContactRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CustomerContactRequest) GetEmailAddress() string {
	if m != nil {
		return m.EmailAddress
	}
	return ""
}

func (m *CustomerContactRequest) GetTelephoneNumber() string {
	if m != nil {
		return m.TelephoneNumber
	}
	return ""
}

type CustomerContactReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CustomerContactReply) Reset()         { *m = CustomerContactReply{} }
func (m *CustomerContactReply) String() string { return proto.CompactTextString(m) }
func (*CustomerContactReply) ProtoMessage()    {}
func (*CustomerContactReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{1}
}

func (m *CustomerContactReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerContactReply.Unmarshal(m, b)
}
func (m *CustomerContactReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerContactReply.Marshal(b, m, deterministic)
}
func (m *CustomerContactReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerContactReply.Merge(m, src)
}
func (m *CustomerContactReply) XXX_Size() int {
	return xxx_messageInfo_CustomerContactReply.Size(m)
}
func (m *CustomerContactReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerContactReply.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerContactReply proto.InternalMessageInfo

func init() {
	proto.RegisterType((*CustomerContactRequest)(nil), "grpc.CustomerContactRequest")
	proto.RegisterType((*CustomerContactReply)(nil), "grpc.CustomerContactReply")
}

func init() { proto.RegisterFile("grpc.proto", fileDescriptor_bedfbfc9b54e5600) }

var fileDescriptor_bedfbfc9b54e5600 = []byte{
	// 222 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xcd, 0x4a, 0xc3, 0x50,
	0x10, 0x85, 0x4d, 0x8c, 0x82, 0x83, 0x7f, 0x0c, 0x52, 0x2e, 0xc1, 0x85, 0xc4, 0x8d, 0x6e, 0xba,
	0xd0, 0x27, 0x28, 0xdd, 0x2b, 0x54, 0x04, 0x77, 0xe5, 0x36, 0x33, 0x68, 0x20, 0xc9, 0xbd, 0xce,
	0x9d, 0x08, 0x7d, 0x1b, 0x1f, 0x55, 0x32, 0x05, 0x17, 0xc6, 0xee, 0x0e, 0xdf, 0x7c, 0x8b, 0x33,
	0x07, 0xe0, 0x5d, 0x62, 0x3d, 0x8f, 0x12, 0x34, 0x60, 0x31, 0xe6, 0xea, 0x3b, 0x83, 0xd9, 0x72,
	0x48, 0x1a, 0x3a, 0x96, 0x65, 0xe8, 0xd5, 0xd7, 0xba, 0xe2, 0xcf, 0x81, 0x93, 0x22, 0x42, 0x41,
	0x5e, 0xbd, 0xcb, 0x6e, 0xb2, 0xbb, 0x93, 0x95, 0x65, 0x3c, 0x87, 0xbc, 0x21, 0x97, 0x1b, 0xc9,
	0x1b, 0x1a, 0x9d, 0xde, 0x77, 0xec, 0x0e, 0x77, 0xce, 0x98, 0xf1, 0x16, 0xce, 0xb8, 0xf3, 0x4d,
	0xbb, 0xf6, 0x44, 0xc2, 0x29, 0xb9, 0xc2, 0x8e, 0xa7, 0x06, 0x17, 0x3b, 0x86, 0xf7, 0x70, 0xa9,
	0xdc, 0x72, 0xfc, 0x08, 0x3d, 0xaf, 0xfb, 0xa1, 0xdb, 0xb0, 0xb8, 0x23, 0xf3, 0x2e, 0x7e, 0xf9,
	0x93, 0xe1, 0x6a, 0x06, 0x57, 0x93, 0x86, 0xb1, 0xdd, 0x3e, 0xc8, 0xa4, 0xf9, 0x0b, 0xcb, 0x57,
	0x53, 0x33, 0xbe, 0x41, 0xb9, 0x20, 0x7a, 0x96, 0xd7, 0x48, 0x5e, 0xf9, 0x8f, 0x84, 0xd7, 0x73,
	0x5b, 0xe1, 0xff, 0xaf, 0xcb, 0x72, 0xcf, 0x35, 0xb6, 0xdb, 0xea, 0x60, 0x73, 0x6c, 0xdb, 0x3d,
	0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0x01, 0xe2, 0xf8, 0x7e, 0x49, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CustomerContactServiceClient is the client API for CustomerContactService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CustomerContactServiceClient interface {
	AddOrUpdateCustomerContact(ctx context.Context, in *CustomerContactRequest, opts ...grpc.CallOption) (*CustomerContactReply, error)
}

type customerContactServiceClient struct {
	cc *grpc.ClientConn
}

func NewCustomerContactServiceClient(cc *grpc.ClientConn) CustomerContactServiceClient {
	return &customerContactServiceClient{cc}
}

func (c *customerContactServiceClient) AddOrUpdateCustomerContact(ctx context.Context, in *CustomerContactRequest, opts ...grpc.CallOption) (*CustomerContactReply, error) {
	out := new(CustomerContactReply)
	err := c.cc.Invoke(ctx, "/grpc.CustomerContactService/AddOrUpdateCustomerContact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CustomerContactServiceServer is the server API for CustomerContactService service.
type CustomerContactServiceServer interface {
	AddOrUpdateCustomerContact(context.Context, *CustomerContactRequest) (*CustomerContactReply, error)
}

func RegisterCustomerContactServiceServer(s *grpc.Server, srv CustomerContactServiceServer) {
	s.RegisterService(&_CustomerContactService_serviceDesc, srv)
}

func _CustomerContactService_AddOrUpdateCustomerContact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CustomerContactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerContactServiceServer).AddOrUpdateCustomerContact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.CustomerContactService/AddOrUpdateCustomerContact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerContactServiceServer).AddOrUpdateCustomerContact(ctx, req.(*CustomerContactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CustomerContactService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.CustomerContactService",
	HandlerType: (*CustomerContactServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddOrUpdateCustomerContact",
			Handler:    _CustomerContactService_AddOrUpdateCustomerContact_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc.proto",
}
